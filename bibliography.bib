@article{CASADEI2019252,
	title = {Modelling and simulation of Opportunistic IoT Services with Aggregate Computing},
	journal = {Future Generation Computer Systems},
	volume = {91},
	pages = {252-262},
	year = {2019},
	issn = {0167-739X},
	doi = {https://doi.org/10.1016/j.future.2018.09.005},
	url = {https://www.sciencedirect.com/science/article/pii/S0167739X18307246},
	author = {Roberto Casadei and Giancarlo Fortino and Danilo Pianini and Wilma Russo and Claudio Savaglio and Mirko Viroli},
	keywords = {Internet of Things, Opportunistic Services, Aggregate Computing},
	abstract = {The Internet of Things (IoT) is emerging as a ubiquitous and dense ecosystem in which novel devices and smart objects interoperate to establish smart cities, smart 	buildings, etc. In such application contexts, a plethora of innovative services are expected to stand out, deeply impacting our daily routine. In particular, real IoT drivers will 	be cyberphysical, collective, highly dynamic and contextualised services, called in the following Opportunistic IoT Services. This work proposes a full-fledged approach for their 	development, based on (i) a technology-agnostic yet detailed modelling phase, which allows opportunistic properties to emerge since the preliminary service analysis; and (ii) the 	implementation and further simulation of IoT services through Aggregate Computing, a distributed computing paradigm and engineering stack able to harness, in practice, the dynamic, 	collective and context-driven nature of Opportunistic IoT Services. A mass event case study, related to the real-world scenario of a large scale urban crowds detection and 	steering, provides evidence of the huge potential of the approach: indeed, simulation results highlight the effectiveness, flexibility, scalability and resilience of the Aggregate 	Computing-based approach to the design of Opportunistic IoT Services.}
}

@article{CASADEI2019154,
	title = {A development approach for collective opportunistic Edge-of-Things services},
	journal = {Information Sciences},
	volume = {498},
	pages = {154-169},
	year = {2019},
	issn = {0020-0255},
	doi = {https://doi.org/10.1016/j.ins.2019.05.058},
	url = {https://www.sciencedirect.com/science/article/pii/S002002551930461X},
	author = {Roberto Casadei and Giancarlo Fortino and Danilo Pianini and Wilma Russo and Claudio Savaglio and Mirko Viroli},
	keywords = {Internet of Things, Edge computing, Smart city, Opportunistic services, Aggregate computing},
	abstract = {Technological advances have recently fostered the Internet of Things vision, in which systems of situated entities perceive and act upon the world, and interact with 	one another to provide novel kinds of services, which are inherently cyber-physical, increasingly contextual and opportunistic in nature, and possibly span different scales and 	domains. The requirements of such IoT applications, however, pose significant non/functional challenges to engineering efforts, mitigated by emerging computing paradigms. On the 	infrastructure side, Cloud, Fog, and Edge Computing provide virtualised, on-demand, elastic resource provisioning – at the distant data centres, Network core and Edge – supporting 	the abstraction and scalability needs of IoT settings while also altogether giving options for QoS-driven trade-offs. However, despite intense research in these fields, there is 	still a gap of approaches supporting the engineering of dynamic, heterogeneous smart environments, such as those involving “collectives” of devices coordinating in a complex 	fashion to provide “global” services. In this paper, we integrate the Aggregate Computing and Opportunistic IoT Service models and propose a full-fledged approach for the 	engineering – from analysis to simulation – of complex “Edge of Things” applications. We compare by simulation two deployment targets for the same collective application: one 	centralised/Cloud-based, and the other decentralised/Edge-based. We discuss the trade-offs each one introduces, and we draw recommendations on application-driven choices of the 	appropriate deployment.}
}

@InProceedings{10.1007/978-3-031-35361-1_2,
	author="Aguzzi, Gianluca
	and Casadei, Roberto
	and Viroli, Mirko",
	editor="Jongmans, Sung-Shik
	and Lopes, Ant{\'o}nia",
	title="MacroSwarm: A Field-Based Compositional Framework for Swarm Programming",
	booktitle="Coordination Models and Languages",
	year="2023",
	publisher="Springer Nature Switzerland",
	address="Cham",
	pages="31--51",
	abstract="Swarm behaviour engineering is an area of research that seeks to investigate methods for coordinating computation and action within groups of simple agents to achieve 	complex global goals like collective movement, clustering, and distributed sensing. Despite recent progress in the study and engineering of swarms (of drones, robots, vehicles), 	there is still need for general design and implementation methods that can be used to define complex swarm coordination in a principled way. To face this need, this paper proposes 	a new field-based coordination approach, called MacroSwarm, to design fully composable and reusable blocks of swarm behaviour. Based on the macroprogramming approach of aggregate 	computing, it roots on the idea of modelling each block of swarm behaviour by a purely functional transformation of sensing fields into actuation description fields, typically 	including movement vectors. We showcase the potential of MacroSwarm as a framework for collective intelligence by simulation, in a variety of scenarios including flocking, 	morphogenesis, and collective decision-making.",
	isbn="978-3-031-35361-1"
}

@ARTICLE{9927406,
  	author={Aguzzi, Gianluca and Casadei, Roberto and Pianini, Danilo and Viroli, Mirko},
	journal={IEEE Internet Computing}, 
	title={Dynamic Decentralization Domains for the Internet of Things}, 
	year={2022},
	volume={26},
	number={6},
	pages={16-23},
	abstract={The Internet of Things (IoT) and edge computing are fostering a future of ecosystems hosting complex decentralized computations that are deeply integrated with our very 	dynamic environments. Digitalized buildings, communities of people, and cities will be the next-generation “hardware and platform,” counting myriads of interconnected devices, on 	top of which intrinsically distributed computational processes will run and self-organize. They will spontaneously spawn, diffuse to pertinent logical/physical regions, cooperate 	and compete, opportunistically summon required resources, collect and analyze data, compute results, trigger distributed actions, and eventually decay. What would a programming 	model for such ecosystems look like? Based on research findings on self-adaptive/self-organizing systems, this article proposes design abstractions based on “dynamic 	decentralization domains”: regions of space opportunistically formed to support situated recognition and action. We embody the approach into a Scala application program interface 	(API) enacting distributed execution and show its applicability in a case study of environmental monitoring.},
  	keywords={Sensors;Programming;Ecosystems;Monitoring;Computational modeling;Internet of Things},
  	doi={10.1109/MIC.2022.3216753},
  	ISSN={1941-0131},
  	month={11},}


@online{pinholeCameraModel,
	author = {Wikipedia contributors},
 	title = {Pinhole camera},
 	year = "2024",
 	url = "https://en.wikipedia.org/wiki/Pinhole_camera",
	urldate = {2024-10-14}
} 

@online{cameraCalibrationMathWorks,
	author = {MathWorks},
 	title = {What Is Camera Calibration?},
 	year = "2024",
 	url = "https://it.mathworks.com/help/vision/ug/camera-calibration.html",
	urldate = {2024-10-13}
} 

@online{pinholeCamera,
	author = {Wikipedia contributors},
 	title = {Pinhole camera model},
 	year = "2024",
 	url = "https://en.wikipedia.org/wiki/Pinhole_camera_model",
	urldate = {2024-10-13}
}

@online{centralizedVsDistributed,
	author = {Kev Zettler},
	title = {What is a distributed system?},
	url = {https://www.atlassian.com/microservices/microservices-architecture/distributed-architecture},
	urldate = {2024-10-07}
}

@article{VIROLI2019100486,
	title = {From distributed coordination to field calculus and aggregate computing},
	journal = {Journal of Logical and Algebraic Methods in Programming},
	volume = {109},
	pages = {1},
	year = {2019},
	issn = {2352-2208},
	doi = {https://doi.org/10.1016/j.jlamp.2019.100486},
	url = {https://www.sciencedirect.com/science/article/pii/S235222081930032X},
	author = {Mirko Viroli and Jacob Beal and Ferruccio Damiani and Giorgio Audrito and Roberto Casadei and Danilo Pianini},
	keywords = {Distributed systems, Aggregate computing, Field calculus, Spatial computing},
	abstract = {Aggregate computing is an emerging approach to the engineering of complex coordination for distributed systems, based on viewing system interactions in terms of 	information propagating through collectives of devices, rather than in terms of individual devices and their interaction with their peers and environment. The foundation of this 	approach is the distillation of a number of prior approaches, both formal and pragmatic, proposed under the umbrella of field-based coordination, and culminating into the field 	calculus, a universal functional programming model for the specification and composition of collective behaviours with equivalent local and aggregate semantics. This foundation has 	been elaborated into a layered approach to engineering coordination of complex distributed systems, building up to pragmatic applications through intermediate layers encompassing 	reusable libraries of program components. Furthermore, some of these components are formally shown to satisfy formal properties like self-stabilisation, which transfer to whole 	application services by functional composition. In this survey, we trace the development and antecedents of field calculus, review the field calculus itself and the current state 	of aggregate computing theory and practice, and discuss a roadmap of current research directions with implications for the development of a broad range of distributed systems.}
}

@online{javaCVRepo,
	author = {Samuel Audet},
	title = {javacv},
	url = {https://github.com/bytedeco/javacv?tab=readme-ov-file},
	urldate = {2024-10-06}
}

@online{OpenCVMainPage,
  	title = {OpenCV},
  	author = {OpenCV.org},
  	url = {https://opencv.org},
  	urldate = {2024-10-06}
}

@online{OpenCVGitHub,
  	title = {opencv},
  	author = {OpenCV.org},
  	url = {https://github.com/opencv/opencv.git},
  	urldate = {2024-11-11}
}

@book{baggio2015opencv,
  	title = {OpenCV 3.0 Computer Vision with Java},
  	author = {Baggio, D.L.},
  	isbn = {9781783283989},
  	url = {https://books.google.it/books?id=LFtICgAAQBAJ},
  	year = {2015},
  	publisher = {Packt Publishing}
}

@online{reverseEngineeringArucoMarkers,
	author = {Brandon Minor},
	title = {Reverse-Engineering Fiducial Markers For Perception},
	url = {https://www.tangramvision.com/blog/reverse-engineering-fiducial-markers-for-perception},
	urldate = {2024-09-22}
}

@article{s21165407,
	AUTHOR = {Košťák, Milan and Slabý, Antonín},
	TITLE = {Designing a Simple Fiducial Marker for Localization in Spatial Scenes Using Neural Networks},
	JOURNAL = {Sensors},
	VOLUME = {21},
	YEAR = {2021},
	NUMBER = {16},
	ARTICLE-NUMBER = {5407},
	URL = {https://www.mdpi.com/1424-8220/21/16/5407},
	PAGES = {7},
	PubMedID = {34450848},
	ISSN = {1424-8220},
	ABSTRACT = {The paper describes the process of designing a simple fiducial marker. The marker is meant for use in augmented reality applications. Unlike other systems, it does not 	encode any information, but it can be used for obtaining the position, rotation, relative size, and projective transformation. Also, the system works well with motion blur and is 	resistant to the marker’s imperfections, which could theoretically be drawn only by hand. Previous systems put constraints on colors that need to be used to form the marker. The 	proposed system works with any saturated color, leading to better blending with the surrounding environment. The marker’s final shape is a rectangular area of a solid color with 	three lines of a different color going from the center to three corners of the rectangle. Precise detection can be achieved using neural networks, given that the training set is 	very varied and well designed. A detailed literature review was performed, and no such system was found. Therefore, the proposed design is novel for localization in the spatial 	scene. The testing proved that the system works well both indoor and outdoor, and the detections are precise.},
	DOI = {10.3390/s21165407}
}

@online{artificialVisionHistory,
	author = {The Sama Team},
	title = {Computer Vision: History \& How it Works},
	url = {https://www.sama.com/blog/computer-vision-history-how-it-works},
	urldate = {2024-09-22}
}

@online{microsoftArtificialVision,
	author = {Microsoft},
	title = {Che cos'è la visione artificiale?},
	url = {https://azure.microsoft.com/it-it/resources/cloud-computing-dictionary/what-is-computer-vision#classificazione-degli-oggetti},
	urldate = {2024-09-22}
}

@book{bradski2008learning,
	title={Learning OpenCV: Computer Vision with the OpenCV Library},
	author={Bradski, G. and Kaehler, A.},
	isbn={9780596554040},
	url={https://books.google.it/books?id=seAgiOfu2EIC},
	pages={2-5},
	year={2008},
	publisher={O'Reilly Media}
}